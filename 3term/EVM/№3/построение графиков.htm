<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html><head>

<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" href="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/STYLE.css">
</head><body>
<table width="16%" border="0" cols="3">
  <tbody><tr> 
    <td><a href="http://teachprog.narod.ru/program/predmet/Mathematica/book/Mathematica5/Glava_09/Index06.htm"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/Back.gif" border="0"></a></td>
    <td width="10%"><a href="http://teachprog.narod.ru/program/predmet/Mathematica/book/Mathematica5/Glava_09/Index0.htm"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/Menu.gif" border="0"></a></td>
    <td align="right"><a href="http://teachprog.narod.ru/program/predmet/Mathematica/book/Mathematica5/Glava_09/Index08.htm"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/For.gif" border="0"></a></td>
  </tr>
</tbody></table>
<table width="11%" border="0" cols="3">
  <tbody><tr> 
    <td width="10%">&nbsp;</td>
  </tr>
</tbody></table>
<table width="100%" border="0">
  <tbody><tr>
    <td><p class="tit_B">Вычерчивание графиков </p><p class="Text">
<br>
<br>
Для вычерчивания графиков функций одной переменной имеется несколько
функций. Самой важной из них является, пожалуй, <span class="Text_b">Plot</span>.
<br>
<br>
<span class="Text_b">Функция Plot </span>
<br>
<br>
Эта функция уже неоднократно встречалась нам ранее. Количество ее опций просто поражает.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/29.gif">
<br>
Эта функция позволяет чертить сразу несколько графиков функций. Чтобы
начертить сразу несколько графиков функций, в качестве первого
аргумента функции <span class="Text_b">Plot</span> задается список функций. Для того чтобы различить графики, обычно используется
опция <span class="Text_b">PlotStyle -&gt; {{dirl}, {dir2},...},</span> где <span class="Text_b">dir</span><span lang="en-us">1</span>— совокупность графических директив, относящихся к 1-му графику, 
<span class="Text_b">dir2</span>— совокупность графических директив,
относящихся к 2-му графику, и т.д. Ниже вычерчено два графика: парабола
— жирной линией и прямая — потоньше. Кроме того, эти графики
различаются цветом (на экране, конечно).
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/30.gif">
<br>Заметьте, что координатные оси пересекаются на этом рисунке не в
начале координат (не в точке с координатами (0, 0)). Однако если
установить опцию <span class="Text_b">AxesOrigin-&gt; {xorigin, yorigin}</span>, то оси будут пересекаться в точке с координатами (<span class="Text_b">xorigin, yorigiri)</span>.
<br>
<br>
Рассмотрим пример построения графиков нескольких функций. Пусть
функции, графики которых мы хотим построить, получаются с помощью
функции <span class="Text_b">Table</span> или <span class="Text_b">NDSolve</span>. Для определенности пусть это будут полиномы Чебышева. Следующая строка ошибочна.
<br>
<br>
<span class="Text_b">Plot[Table[ChebyshevT[n,x] ,{n,l,4}],{x,-l,l}) </span>
<br>
<br>
Дело в том, что здесь система Mathematica не сможет вычислить функции.
Почему? Давайте разберемся. Начнем сначала. Вот график, который
строится без проблем.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/31.gif">
<br>
Здесь построены графики первых четырех полиномов Чебышева первого рода: <span class="Text_b">ChebyshevT[<span lang="en-us">0</span>, x]</span> — полином нулевого порядка, равный тождественно единице,
<span class="Text_b">ChebyshevT[l,x] = х, </span>а также полиномы<span class="Text_b"> ChebyshevT[2,z] </span>и <span class="Text_b">ChebyshevT[<span lang="en-us">3</span>,x]</span>. Но вот так график построить не удастся.
<br>
</p><pre>list01={ChebyshevT[0,x],ChebyshevT[1,х],ChebyshevT[2,х],ChebyshevT[3,x]}
</pre><pre>{1, х, -1 + 2х2, -Зх + 4х3} Plottlist<span lang="en-us">0</span>l,{х,-1,1}];
</pre><pre>Plot::plnr: list<span lang="en-us">0</span>l is not a
</pre><pre>machine-size real number at x =-1.. More...
</pre>
<br>
Оказывается, система Mathematica не может вычислить значения <span class="Text_b">list01</span>! Почему? Потому что функция 
<span class="Text_b">Plot</span> имеет атрибут <span class="Text_b">HoldAll</span>.
<br>
<br>
<span class="Text_b">Attributes[Plot] {HoldAll,Protected) </span>
<br>
<br>
Этот атрибут указывает, что аргументы функций вычисляться не должны. Обычно аргументы функций вычисляются.
<br>
<br>
<span class="Text_b">hh[1+2,2+3,3+4] hh[3,5,7] </span>
<br>
<br>
Но если функции приписать атрибут <span class="Text_b">HoldAll</span>, вычисления аргументов выполняться не будут.
<br>
<br>
<span class="Text_b">SetAttributes[hh,HoldAll] hh[l+2,2+3,3+4] hh[l+2,2+3,3+4] </span>
<br>
<br>
Чтобы в таких случаях выполнить вычисления, можно использовать функцию <span class="Text_b">Evaluate</span>. Выражение<span class="Text_b"> Plot [Evaluate [list0l], {x,-l, 1} ];</span> строит предыдущий график без проблем. Ниже построены графики 8 полиномов Чебышева.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/32.gif">
<br>Иногда на рисунке через точки координатных осей с координатными
отметками нужно провести сетку вертикальных и горизонтальных прямых.
Для этого достаточно установить опцию <span class="Text_b">GridLines</span> равной <span class="Text_b">Automatic</span>.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/33.gif">
<br>
В данном случае сетка видна на графике функции<span class="Text_b"> у = sin x<sup>2</sup></span>, приведенном выше.
<br>
<br>
Опция <span class="Text_b">PlotStyle</span> задается так же, как и опции <span class="Text_b">AxesStyle</span> и <span class="Text_b">FrameStyle</span>, но определяет графический стиль линий.
<br>
<br>
При построении графиков система Mathematica использует адаптивный
алгоритм, который предусматривает получение достаточно гладких кривых.
Одним из критериев гладкости является величина угла между
последовательными отрезками, аппроксимирующими график функции между
соседними точками, в которых вычисляются ее значения. Величина этого
угла устанавливается опцией <span class="Text_b">MaxBend</span>, по
умолчанию он равен 10°. Вот график функции у = e-f .
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/34.gif">
<br>
Как видите, график построен не полностью. Причина заключается в том,
что вверху мы имеем слишком острый пик. Но если увеличить опцию <span class="Text_b">MaxBend</span>, например, до 15, пик будет нарисован полностью.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/35.gif">
<br>
Иногда значение этой опции приходится уменьшать.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/36.gif">
<br>
Слева хорошо заметен излом. Этот недостаток легко исправить.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/37.gif">
<br>
Как видите, несколько изъянов исчезло.
<br>
<br>
Количество точек, в которых производятся вычисления, регулируется опцией <span class="Text_b">PlotPoints</span>, которая по умолчанию равна 25. Если угол между последовательными сегментами превосходит значение опции 
<span class="Text_b">MaxBend</span>, то производится дробление
интерзала между соседними точками, но таких шагов дробления не может
быть больше, чем значение опции <span class="Text_b">PlotDivision</span>. Если это значение мало, график получится угловатым.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/38.gif">
<br>
Если же использовать значение по умолчанию (оно больше 1), график будет более
гладким.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/39.gif">
<br>
Для уменьшения времени вычисления функций в выбранных по адаптивному
алгоритму точках производится их компилирование, заключающееся в
создании некоторого псевдокода. Однако это может привести к уменьшению
точности вычислений. Чтобы избежать подобной потери точности, нужно
применить опцию <span class="Text_b">Compiled-&gt;False</span>. Давайте посмотрим, для каких функций по умолчанию 
установлена <span lang="ru">опция</span> <span class="Text_b">Compiled-&gt;True</span>.
<br>
<pre>Block[{$Messages={}}, Select[Names["*"],
</pre><pre>Options[ToExpression[I],Compiled]=={Compiled-&gt;True}&amp;]]
</pre><pre> {ContourPlot,DensityPlot,FindMaximum,FindMinimum,FindRoot, 
</pre><pre>NDSolve,NIntegrate,NProduct,NSum,ParametricPlot,
</pre><pre> ParametricPlot3D,Play,Plot,Plot3D}
</pre>
<br>
<span class="Text_b">Построение графиков функций, заданных параметрически, — функция ParametricPlot
</span>
<br>
<br>
Функция <span class="Text_b">ParametricPlot</span> позволяет рисовать кривые и семейства кривых, заданных параметрически. Эта функция имеет те же опции, что и функция 
<span class="Text_b">Plot</span>. В некотором смысле эта функция универсальна. Если не учитывать неявно заданных функций, то именно функция
<span class="Text_b">ParametricPlot</span> позволяет построить графики
всех мыслимых функций, включая и многозначные. Без проблем строятся и
графики, заданные в полярной системе координат. Фигуры Лиссажу, кривые
Уатта, овалы Кассини, Декарта, Мюнгера, улитки Паскаля, однолистники,
листы Декарта, всевозможные розы и розетки, рулеты, годографы, эволюты
и эвольвенты всех мыслимых и немыслимых кривых, циклоиды, всевозможные
спирали, циссоиды, конхоиды, строфоиды, астроиды, кардиоиды, неоиды,
лемнискаты, узлы, квадратрисы, клотоиды, кохлеоиды, трохоиды, элипсиды,
катакаустики, всевозможные параболы, локсодромы и лоциклики, трезубцы,
трисектрисы, трилистники, верзиеры, брахистохроны, подэры, кривые с
именами древнегреческих и средневековых ученых — вот далеко не полный
перечень всевозможного зверья, которое может быть нарисовано функцией
ParametricPlot.
<br>
<br>
<span class="Text_b">Пример 9.3.</span> Фигуры Лиссажу. Это классический пример применения функции <span class="Text_b">ParametricPlot</span>. Рисуются эти фигуры совсем просто, и потому мы нарисуем сразу несколько.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/40.gif">
<br>
<span class="Text_b">Пример 9.4. </span>Розы и розетки. Эти цветы
весьма многочисленны, выглядят, как правило, очень мило и легко
рисуются. Процесс вычерчивания совсем прост, если предварительно
определить следующую функцию.
<br>
<pre>PolarR[al,a2_,omega_,phi_]:=Module[{r=al+a2*Cos[omega*phi]},
</pre><pre>&lt;r*Coi[phi],r*Sin[phi]}]
</pre>
<br>
Вот как, например, с помощью этой функции рисуется многолепестковая роза.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/41.gif">
<br>
А вот еще один милый цветок.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/42.gif">
<br>Цветы эти столь разнообразны, что согласия относительно количества
их видов нет. Одни насчитывают более полтора десятка видов, другие — не
менее сотни.
<br>
<br>
<span class="Text_b">Пример 9.5.</span> Кривые в полярных координатах.
Построение кривых в полярных координатах значительно упрощается, если
предварительно определить функцию
<span class="Text_b">PolarXY</span>.
<br>
<br>
<span class="Text_b">PolarXY[r_,phi_]:= </span>
<br>
<br>
<span class="Text_b">{r*Cos[phi],r*Sin[phi]} </span>
<br>
<br>
Вот как, например, с помощью этой функции рисуется улитка Паскаля.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/43.gif">
<br>
<span class="Text_b">Пример 9.6.</span> Полярные зверинцы. Иногда
приходится подбирать параметры в семействе кривых, заданных в полярных
координатах. Этот процесс значительно упрощается, если предварительно в
определение функции
<span class="Text_b">PolarXY</span> ввести параметры, которые определяют кривую семейства.
<br>
<br>
<span class="Text_b">PolarXYAB[r_,phi_,   а_,b_]:= </span>
<br>
<br>
<span class="Text_b">{r*Cos[a*phi],r*Sin[b*phi]} </span>
<br>
<br>
Вот как, например, с помощью этой функции рисуется одна из кривых семейства.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/44.gif">
<br>
Как вам эта зверушка? Понравилась? Если да, вы подобрали параметры! Если нет, пробуйте другие параметры.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/45.gif">
<br>
Ну а эта зверушка? Неужели не нравится? Тогда продолжайте перебирать параметры...
<br>
<br>
<span class="Text_b">Пример 9.7. </span>Годографы. Иногда приходится
вычерчивать годографы семейства вектор-функций, заданных в полярных
координатах. В определении такой функции часто участвует некий вектор
(очень часто единичный), который с течением времени вращается вокруг
начала координат. Пусть, например, нужно вычертить годограф
вектор-функции r(t) = аte + R<sup>t+a</sup>(e) + АR<sup>wt+p</sup>(e), где e — единичный вектор, 
R<sup>ф</sup> — поворот на угол ф вокруг начала координат, а а, а, А, w, p — заданные параметры. Тогда, чтобы упростить определение функции 
<span class="Text_b">PolarXYAB</span>, можно поступить так. Сначала определим следующую функцию.
<br>
<br>
<span class="Text_b">Rphi[phi_]:={Cos[phi],Sin[phi]} </span>
<br>
<br>
С ее помощью значительно упрощается определение функции <span class="Text_b">PolarXYAB</span>, которое упрощает задание кривой семейства.
<br>
<br>
<span class="Text_b">PolarXYAB[t_,a_,alpha_,aa_,omega_,beta_]:= </span>
<br>
<br>
<span class="Text_b">{0,a*t}+Rphi[t+alpha]+aa*Rphi[omega*t+beta] </span>
<br>
<br>
Вот как, например, с помощью этой функции рисуется одна из кривых семейства.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/46.gif">
<br>
Как вам эта зверушка? Если думаете, что они все такие, вы ошибаетесь.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/47.gif">
<br>
Вращающийся единичный вектор очень часто полезен и при вычерчивании других кривых, например циклоид.
<br>
<br>
<span class="Text_b">Пример 9.8.</span> Циклоиды. Циклоиды (высших порядков) описываются уравнением Z 
= l<sub>0</sub>+l<sub>1</sub>t<sup>iwt</sup>+l<sub>2</sub>t<sup>iwt</sup>+..+l<sub>n</sub>t<sup>iwn</sup>. Вот как, например, выглядит определение функции
<span class="Text_b">PolarXYAB</span> для циклоид некоторого определенного типа.
<br>
<br>
<span class="Text_b">PolarXYAB[t  ,rl_,r2_,a_,omega_]:= </span>
<br>
<br>
<span class="Text_b">r1+r2*Rphi[t]+a*Rphi[omega*t] </span>
<br>
<br>
Вот как теперь рисуется одна из циклоид.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/48.gif">
<br>
<span class="Text_b">Пример 9.9. </span>Гиперболы   в   полярных   координатах.   Введенную   нами   функцию
<br>
<br>
<span class="Text_b">PolarXY[r_, phi_] : = { r*Cos [phi], r*sin [phi]}</span> удобно использовать также в определении функции
<span class="Text_b">PolarXYAB</span> для многих функций, заданных в полярных координатах. Посмотрим, как это делается на примере вычерчивания полярных гипербол.
<br>
<br>
Вы знаете, как выглядит полярная гипербола&nbsp;
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/49.gif">
<br>
<br>
Если нет, вас ждет сюрприз!
<br>
<br>
Сначала дадим определение функции <span class="Text_b">PolarXYAB</span> для полярных гипербол.
<br>
<br>
<span class="Text_b">PolarXYAB[t_,a_,b_]:= PolarXY[r=a+ b/t,t] </span>
<br>
<br>
Вот как теперь рисуется полярная гипербола.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/50.gif">
<br>
Позвольте вас спросить, а сколько асимптот у полярной гиперболы?!
<br>
<br>
<span class="Text_b">Пример 9.10.</span> Параболы в полярных координатах. Применим теперь введенную нами
функцию <span class="Text_b">PolarXY[r_, phi_] : = {r*Cos [phi], r*sin[phi] }</span> для вычерчивания полярных парабол 
r= а<font face="Times New Roman">&#966;</font><sup>2</sup>+b<font face="Times New Roman">&#966;</font>+с. Сначала дадим определение функции 
<span class="Text_b">PolarXYAB</span> для полярных парабол.
<br>
<br>
<span class="Text_b">PolarXYAB[t_,а_,n  ,с_]:= </span>
<br>
<br>
<span class="Text_b">PolarXY[r=a*t~2+b*t+c,t] </span>
<br>
<br>
Вот как теперь рисуется полярная парабола.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/51.gif">
<br>
<span class="Text_b">Пример 9.11. </span>Кривые второго порядка в
полярных координатах. Ну а сложно ли вычертить в полярных координатах
обычную кривую второго порядка? Нисколько. Сначала дадим определение
функции
<span class="Text_b">PolarXYAB</span> для обычных кривых второго порядка.
<br>
<br>
<span class="Text_b">PolarXYAB[t_,a_,b_]:= </span>
<br>
<br>
<span class="Text_b">Pol^rXY[r=l/(a+b*Cos[t]) , t] </span>
<br>
<br>В зависимости от параметров у нас получится обычная кривая второго
порядка, причем фокус будет находиться в начале координат. Вот как
рисуется обычная гипербола.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/52.gif">
<br>Пример 9.12. Спираль Корню. Предположим, нужно начертить кривую,
которая имеет сложные параметрические уравнения х = x(i) и у = y(t).
Тогда лучше всего предварительно определить функции х = x(t) и у - y(t)
и именно их использовать в функции ParametricPlot. Покажем, как это
делается на примере спирали Корню. В соответствии с рекомендацией
сначала определяем x(f) и y(f) для спирали Корню.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/53.gif">
<br>Как видите, система Mathematica заметила, что x(t) и y(f) являются
интегралами Френеля. Теперь, определив x(t) и y(t), можем построить
график.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/54.gif">
<br>
<span class="Text_b">Специальные типы графиков </span>
<br>
<br>
Как мы видели, функция <span class="Text_b">ParametricPlot</span>
практически универсальна. Однако часто приходится строить графики
специального вида. Тогда можно воспользоваться более
специализированными функциями.
<br>
<br>
<span class="Text_b">Графики в полярной системе координат </span>
<br>
<br>
Построение графиков в полярной системе координат зачастую упрощается, если воспользоваться функцией 
<span class="Text_b">PolarPlot</span> из пакета <span class="Text_b">Graphics`Graphics`</span>. Пакет этот загружается как 
обычно. <span class="Text_b">&lt;&lt;Graphics` Graphics` </span>
<br>
<br>
Ниже показано, как нарисовать эллипс и улитку на одном графике.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/55.gif">
<br>
<span class="Text_b">Пример 9.13.</span> Несколько графиков в разных системах координат на одном чертеже.
<br>
<br>Иногда на одном листе (чертеже) нужно начертить несколько графиков,
притом в разных системах координат. Предположим, на одном листе нужно
начертить четыре графика, расположив их в два ряда по два графика, т.е.
два графика в верхнем ряду и два — в нижнем. Два графика создадим с
помощью функции <span class="Text_b">ParametricPlot</span>, a два — с помощью функции <span class="Text_b">PolarPlot</span>. Сначала загружаем нужный графический пакет.
<br>
<br>
<span class="Text_b">&lt;&lt;Graphics `Graphics`</span><br>
<br>
А теперь задаем радиус-вектор как функцию угла
<br>
<br>
<span class="Text_b">Сlearг[r] </span>
<br>
<br>
<span class="Text_b">г[theta_]=Sin[8 theta/7]; </span>
<br>
<br>
и определяем первый график.
<br>
<br>
<span class="Text_b">ppl=ParametricPlot[{г[theta]Cos[theta],r[theta]Sin[theta]}, </span>
<br>
<br>
<span class="Text_b">{theta,0,14Pi},AspectRatio-&gt;Automatic,DisplayFunction-&gt;Identity] ; </span>
<br>
<br>
После этого точно так же готовим второй график.
<br>
<pre>Clear[r]
</pre><pre>r[theta_]=theta*Cos[ theta];
</pre><pre>pp2=ParametricPlot[{r[theta]Cos[theta],r[theta]Sin[theta]},
</pre><pre>{theta,-19Pi/2,19Pi/2},AspectRatio-&gt;Automatic,PlotPoints-&gt;200,
</pre><pre>DisplayFunction-&gt;Identity];
</pre>
<br>
Аналогично строим третий график, но в полярных координатах с помощью функции <span class="Text_b">PolarPlot</span>.
<br>
<pre>Clear[r]
</pre><pre>r[theta_]=Exp[Cos[ theta]]-2Cos[4theta]+Sin[theta/12]Л5;
</pre><pre>pp3=PolarPlot[r[theta],{theta,0,24Pi},AspectRatio-&gt;Automatic,
</pre><pre>PlotPoints-&gt;200,PlotRange-&gt;{{-4,5},{-4.5,4.5}},
</pre><pre>DisplayFunction-&gt;Identity];
</pre>
<br>
Последний, четвертый, график тоже строим в полярных координатах с помощью функции PolarPlot.
<br>
<pre>Cleart[r]
</pre><pre>pp4=PolarPlot[{Sqrt[l/theta],-Sqrt[I/theta]},{theta,0.1,lOPi},
</pre><pre>AspectRatio-&gt;Automatic,PlotPoints~&gt;200,
</pre><pre>PlotRange-&gt;All,DisplayFunction-&gt;Identity] ;
</pre>
<br>
Наконец, группируем четыре графика в двухмерный массив с помощью функции <span class="Text_b">GraphicsArray</span> и отображаем все четыре графика (полученный массив из двух строк по два графика в строке) с помощью функции show.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/56.gif">
<br>
Как видите, все очень просто! Зато сейчас вам предстоит ответить на очень трудный вопрос: какая из функций PolarPlot и 
<span class="Text_b">ParametricPlot</span> лучше подходит для создания
графика функции, заданной в полярных координатах? По собственному опыту
могу сказать, что часто ответ очевиден, но иногда легче начертить по
сотне графиков с помощью обеих функций, чем обосновать без ссылок на
личные предпочтения выбор конкретной функции!
<br>
<br>
<span class="Text_b">График функции, заданной на дискретном множестве точек, — функция ListPlot
</span>
<br>
<br>
Функция <span class="Text_b">ListPlot</span> предназначена для
построения графика функции, заданной на дискретном множестве точек.
Поэтому ее первый аргумент является либо списком значений функции (в
этом случае считается, что эти значения функция принимает в точках 1,
2, 3, ...), либо списком пар вида [абсцисса, ордината]. Конечно, этот
список можно создать и какой-либо функцией, например <span class="Text_b">Table</span>. У этой функции есть одна отличительная особенность: размером точек управляет графическая директива 
<span class="Text_b">Pointsize</span>, а не <span class="Text_b">Thickness</span>,
потому что в данном случае мы имеем точки, а не линии. Впрочем, иногда
точки на графике нужно соединить отрезками прямых. Для этого в функции <span class="Text_b">ListPlot</span> нужно установить дополнительную опцию <span class="Text_b">PlotJoined-&gt;True</span>. К другим часто используемым опциям относятся
<span class="Text_b">AxesOrigin</span>, <span class="Text_b">GridLines</span> и <span class="Text_b">PlotStyle</span>.
<br>
<br>
<span class="Text_b">Плоские графики функций двух переменных </span>
<br>
<br>
Казалось бы, плоскость двухмерна, и потому на ней можно рисовать
графики только одной переменной. Но, оказывается, что на самом деле,
хотя плоскость и плоская, ее можно раскрасить и с помощью цвета
отобразить значение функции от двух независимых переменных! До этого
давно додумались картографы. Система Mathematica тоже умеет
использовать эту возможность. Функции <span class="Text_b">ContourPlot</span> и <span class="Text_b">DensityPlot</span> позволяют графически изображать функции двух независимых переменных. Функция 
<span class="Text_b">ContourPlot</span>, например, строит линии уровня. Первым аргументом рассматриваемых
<br>
<br>
функций является выражение, задающее функцию двух переменных.
Независимые переменные и области их изменения определяются с помощью
двух списков вида [переменная, минимальное_значение,
максимальное_значение], следующих за первым аргументом.
<br>
<br>
<span class="Text_b">Линии уровня </span>
<br>
<br>Вы наверняка видели топографические карты какой-нибудь местности и
физические карты материков, океанов и островов. И, несомненно, вы не
могли не заметить на них линии уровня. Вдоль таких линий высота над
уровнем моря постоянна. Если двигаться по таким линиям, высота над
уровнем моря не будет изменяться. Но высоту над уровнем моря можно
рассматривать как функцию точки. Линии (точнее, множества) точек, на
которых функция постоянна, называются линиями уровня, или изолиниями
(данной функции). В системе Mathematica есть две функции,
предназначенные для вычерчивания графиков с линиями уровня: <span class="Text_b">ContourPlot</span> и <span class="Text_b">ListContourPlot</span>.
<br>
<br>
<span class="Text_b">Функция ContourPlot </span>
<br>
<br>
Эта функция вычерчивает графики функций, заданных аналитически. Вот
как, например, можно вычертить график функции z — sin xy с линиями
уровня.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/57.gif">
<br>Как видите, это подобно раскраске физической карты. Иногда нужно
оставить только линии уровня, а сам график не раскрашивать. Тогда нужно
воспользоваться опцией <span class="Text_b">ContourShading-&gt;False. </span>
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/58.gif">
<br>
Иногда, наоборот, нужно оставить только раскраску, а изолинии сделать невидимыми. Тогда нужно воспользоваться опцией 
<span class="Text_b">ContourLines-&gt;False. </span>
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/59.gif">
<br>
Контурный график можно раскрасить. Для этого нужно воспользоваться опцией <span class="Text_b">ColorFunction-&gt;Hue</span>. (По умолчанию установлено ColorFunction-&gt;Automatic, что приводит к раскраске оттенками серого.) В случае опции 
<span class="Text_b">ColorFunction-&gt;Automatic</span> области с
меньшими значениями функции имеют более темные оттенки серого цвета,
чем области с большими значениями функции. Иногда нужно подобрать
цвета. Тогда придется поэкспериментировать с этой опцией. Можно,
например, установить<span class="Text_b"> ColorFunction-&gt;(Hue[l-t]&amp;),        ColorFunction-&gt;(Hue[Abs[0.5-i]]&amp;)</span><span lang="ru"> 
или</span> <span class="Text_b">ColorFunction-&gt; (Hue [1-Sin [Pi (l-#) ] ] &amp;)</span>.
По возможности можете руководствоваться правилами цветового дизайна, я
же советов давать не буду, поскольку, как известно, на вкус и на цвет
товарища нет...
<br>
<br>Как быть, если нужно отображать только изолинии, соответствующие
заранее заданному количеству уровней, или только изолинии заданных
уровней? Нет проблем! Для этого есть опция <span class="Text_b">Contours</span>. По умолчанию число линий уровня на рисунке равно десяти, но если установить 
<span class="Text_b">Contours-&gt;1</span> то будут отображаться только
изолинии и уровней, равномерно распределенных между максимальным и
минимальным значениями функции. На следующем графике отображаются
только изолинии 30 уровней.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/60.gif">
<br>
Если же нужно отображать только изолинии заданных уровней, то опцию <span class="Text_b">Contours</span> нужно установить равной списку этих уровней.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/61.gif">
<br>
Список стилей контурных линий можно задать в опции <span class="Text_b">ContourStyle</span>. Например, если установить 
<span class="Text_b">ContourStyle-&gt;{{RGBColor[1,0,0]},{RGBColor[0,0,l]}}</span>, то будет чередоваться красный и синий цвета контурных линий.
<br>
<br>
По умолчанию значение опции <span class="Text_b">PlotPoints</span>
равно 25. При увеличении этого значения на графике могут появиться
дополнительные детали. Вот как изменится предыдущий график, если его
установить равным 50.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/62.gif">
<br>
Кроме перечисленных, функция <span class="Text_b">ContourPlot</span> имеет также опции<span class="Text_b"> AxesOrigin, Compiled</span> и 
<span class="Text_b">ContourSmoothing</span>.
<br>
<br>
При установке <span class="Text_b">ContourSmoothing-&gt;True</span> происходит сглаживание линий уровня.
<br>
<br>
<span class="Text_b">Функция ListContourPlot </span>
<br>
<br>Эта функция вычерчивает фафики функций, заданных таблично. В
приведенном ниже примере таблица значений функции сгенерирована с
помощью функции <span class="Text_b">Table</span>.
<br>
<br>
Фактически в таблицу заносятся значения функции <span class="Text_b">cos(sin(;c2 + ;y2)),</span> к которым добавляется случайное возмущение с помощью функции
<span class="Text_b">Random [Real, {-0.2,0.2}]. </span>
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/63.gif">
<br>
<span class="Text_b">Графики плотности </span>
<br>
<br>
Для построения графиков плотности в системе Mathematica имеются функции <span class="Text_b">DensityPlot</span> и 
<span class="Text_b">ListDensityPlot</span>.
<br>
<br>
<span class="Text_b">Функция DensityPlot </span>
<br>
<br>
Эта функция отображает значения исследуемой функции в ячейках
регулярной сетки с помощью окрашивания этих ячеек либо в серый цвет,
либо в цвета палитры, задаваемой функцией <span class="Text_b">Hue</span>. Ниже приведен пример такого графика с окраской в серые тона.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/64.gif">
<br>
При увеличении значения опции <span class="Text_b">PlotPoints</span> количество деталей, естественно, возрастает.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/65.gif">
<br>
Если хотите убрать разграфку на ячейки (сетку), установите <span class="Text_b">Mesh-&gt;False.
</span>
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/66.gif">
<br>
Стиль ячейки определяет опция MeshStyle. В этой опции можно использовать
Dashing, Thickness, GrayLevel, Hue И RGBColor.
<br>
<br>
Дополнительно у функции <span class="Text_b">DensityPlot</span> есть опции <span class="Text_b">ColorFunction</span> и <span class="Text_b">Compiled</span>.
<br>
<br>
<span class="Text_b">Функция ListDensityPlot </span>
<br>
<br>
С помощью этой функции строится график плотности таблично заданной
функции. В приведенном ниже примере сначала генерируется таблица, а
затем применяется функция <span class="Text_b">ListDensityPlot</span> для построения графика плотности по табличным данным.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/67.gif">
<br>
Конечно, по умолчанию отображается сетка.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/68.gif">
<br>
<span class="Text_b">Специальные виды графиков </span>
<br>
<br>
К специальным видам графиков относятся диаграммы, графики с текстовыми данными и огромное множество других видов.
<br>
<br>
<span class="Text_b">Диаграммы и гистограммы </span>
<br>
<br>
Этот вид графиков в системе Mathematica весьма многочисленный. Ни
численностью, ни возможностями оформления этого вида графиков система
Mathematica не уступает самым лучшим специализированным пакетам.
Рассказывать обо всем этом богатстве с помощью черно-белых рисунков —
значит отвергать пословицу: лучше один раз увидеть, чем сто раз
услышать. Поэтому я не стану утомительно перечислять всевозможные опции
и приводить серенькие рисунки. Если есть потребность, вызовите
справочную систему И найдите описание функций <span class="Text_b">BarChart</span>, <span class="Text_b">GeneralizedBarChart</span>, <span class="Text_b">StackedBarChart</span>, <span class="Text_b">PercentileBarChart</span>, 
<span class="Text_b">PieChart</span>, <span class="Text_b">Histogram</span>
и их многочисленных опций, призванных удовлетворить самые изысканные
вкусы. Впрочем, мне кажется, что все диаграммы наиболее эффектно
смотрятся лишь в цвете.
<br>
<br>
<span class="Text_b">Графики с текстом </span>
<br>
<br>Что бы вы сказали о картине, на которой художник с помощью текста
подписал бы все детали. Ну, например, чтобы вы сказали о Джоконде, если
бы она пестрела надписями вроде "левая рука", "правая рука", "левый
мизинец", "правый мизинец", "портьера", "штора", "левый глаз", "правый
глаз", "улыбка" и т.д. Думаю, Джоконда потеряла бы свой шарм. Но бывают
случаи, когда надписи просто необходимы. На географических картах,
например. Вы знаете, как их сделать. Но, оказывается, есть специальные
функции, которые для изображения точки используют не маленький
кружочек, а цифры или даже любое выражение системы Mathematica! При
этом вы можете отображать точку или только надпись.
<br>
<br>
<span class="Text_b">Функции TextListPlot и LabeledListPlot </span>
<br>
<br>
Функции <span class="Text_b">TextListPlot</span> и <span class="Text_b">LabeledListPlot</span> можно вызвать тремя способами.
<br>
<br>
1-й способ. <span class="Text_b">TextListPlot [ у<sub>1</sub> , у<sub>2</sub>, ...} </span>и <span class="Text_b">LabeledListPlot [ 
y<sub>1</sub> , у<sub>2</sub>, ...]</span>. При этом способе точка с координатами (/', у,) помечается с помощью числа /. Если используете
<span class="Text_b">TextListPlot</span>, то даже точки не увидите — только число. Вот первые 25 десятичных знаков основания натуральных логарифмов.
<br>
<br>
<span class="Text_b">data=First[RealDigits[N[E,25]]] </span>
<br>
<br>
<span class="Text_b">{2,7,1,8,2,8,1,8,2,8,4,5,9,0,4,5,2,3,5,3,6,0,2,8,7} </span>
<br>
<br>
А вот как полученные данные можно отобразить на графике.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/69.gif">
<br>
Точки графика просто изображаются их номерами. А вот функция <span class="Text_b">LabeledListPlot</span> отображает точки и перенумеровывает их.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/70.gif">
<br>
2-й способ. <span class="Text_b">TextListPlot [ {x<sub>1</sub>, у<sub>1 </sub>}, { х<sub>2</sub>, 
у<sub>2</sub>}, ...]</span> и <span class="Text_b">LabeledListPlot [ { х<sub>1</sub>, у<sub>1</sub> }, { х<sub>2</sub>, 
у<sub>2</sub>}, ...].</span> При этом способе точка с координатами <span class="Text_b">(*,, yt) </span>помечается с помощью числа 
.
<br>
<br>
3-й способ.<span class="Text_b"> TextListPlot [{ х<sub>1</sub>, у<sub>1</sub>, выражение^, {х<sub>2</sub>, у<sub>2</sub>, выражениег}, ...]</span> и
<span class="Text_b">LabeledListPlot [{ х}, у<sub>1</sub> , выражение^ , { х<sub>1</sub>, у<sub>2</sub>, выражение?.}, ...].</span> При этом способе точка с координатами<span class="Text_b"> (х<sub>1</sub>, 
y<sub>1</sub>) </span>помечается с помощью выражение,.
<br>
<br>
Пусть, например, имеем следующее.
<br>
<br>
А вам написать Спираль по спирали слабо?
<br>
<br>
Функция <span class="Text_b">MultipleListPlot</span>
<br>
<br>Честно говоря, строку "Колебаться, колебаться, колебаться завещал
нам Великий Синус... " записывать по синусоиде с помощью функции <span class="Text_b">LabeledListPlot</span> несколько хлопотно, так как нужно написать выражение, 
выбирающее нужный символ из списка. В пакете &lt;&lt;<span class="Text_b">Graphics`MultipleListPlot</span>` функция
<span class="Text_b">MultipleListPlot</span> делает это автоматически.
Вообще-то, эта функция предназначена для создания графиков нескольких
табличных функций и потому вызывается так: <span class="Text_b">MultipleListPlot [сиисок,, список^, ...].</span> Вот синус и косинус, заданные таблично, на одном графике.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/71.gif">
<br>
Количество опций этой функции просто поражает. Опция <span class="Text_b">SymbolLabel</span> позволяет указывать последовательность символов, которые используются для пометки точек графика.
<br>
<br>
Пусть имеем следующее.
<br>
<br>
<span class="Text_b">list3=Table[{x*Sin[2   Pi  x],-x*Cos[2   Pi  x] }, {x,0,1,0.05 } ]; </span>
<br>
<br>
Тогда получим вот это.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/72.gif">
<br>
Построение графиков неявно заданных функций — функция <span class="Text_b">ImplicitPlot</span> пакета 
<span class="Text_b">Graphics`ImplicitPlot`</span><br>
<br>
Труднее всего, пожалуй, рисовать графики неявно заданных функций. Для
вычерчивания графиков таких функций в системе Mathematica предусмотрен
пакет <span class="Text_b">Graphics`ImplicitPlot</span>`, который загружается обычным образом: <span class="Text_b">&lt;&lt;Graphics`ImplicitPlot`</span>. В нем для построения графиков неявно заданных функций имеется функция
<span class="Text_b">ImplicitPlot</span>. Ее первым параметром всегда
является уравнение, определяющее неявно заданную функцию. Функция одной
переменной задается неявно с помощью уравнения. Вид этого уравнения
может быть любым допустимым в системе Mathematica; совсем не
обязательно его приводить к виду F(x, у) = 0. Уравнение в системе
Mathematica имеет вид левая часть == правая часть. Обратите внимание на
двойной знак равенства, соединяющий левую и правую части. Уравнение
нельзя записать с одним знаком равенства, т.е. в виде левая часть =
правая часть, поскольку это присваивание. Функция <span class="Text_b">ImplicitPlot</span> пакета <span class="Text_b">Graphics`ImplicitPlot</span>` используется для построения графиков неявно заданных функций одной и двух переменных.
<br>
<br>
Построение графика неявно заданной функции одной переменной
<br>
<br>
При построении графика неявно заданной функции одной переменной применяются два метода:
<br>
<p class="Text"></p><ul>
  <li class="nonum">&nbsp;решение уравнения; нужно задать интервал изменения переменной; </li>
  <li class="nonum">&nbsp;нахождение линии уровня; задаются интервалы изменения обеих переменных. 
  </li>
</ul><p class="Text">
<br>
Построение графика неявно заданной функции одной переменной при
изменении переменной на заданном интервале методом решения уравнения
<br>
<br>
При построении графика неявно заданной функции одной переменной различаются два случая:
<br>
</p><p class="Text"></p><ul>
  <li class="nonum">&nbsp;построение графика неявно заданной функции одной переменной при изменении переменной на заданном интервале; 
  </li>
  <li class="nonum">&nbsp;построение
графика неявно заданной функции одной переменной при изменении
переменной на заданном интервале, из которого исключено несколько
точек. </li>
</ul><p class="Text">
<br>
Чтобы построить график решения уравнения, найденный функцией <span class="Text_b">Solve</span> на интервале изменения переменной<span class="Text_b"> (xmin, xmax)</span>, нужно вызвать функцию
<span class="Text_b">ImplicitPlot</span> [уравнение, {переменная, xmin, xmax}].
<br>
<br>
<span class="Text_b">Пример 9.14.</span> "Кривая дьявола". Эта кривая задается уравнением dс<sup>4</sup> -9c<sup>n</sup>:2 = у<sup>n</sup> -100y<sup>2</sup>. С помощью функцииI<span class="Text_b">mplicitPlot</span> рисуется она совсем просто.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/73.gif">
<br>
<span class="Text_b">Пример 9.15.</span> Кривая х<sup>4 </sup>+ у<sup>4</sup> = х<sup>2</sup> + у<sup>2</sup>. Эта кривая с помощью функции ImplicitPlot рисуется совсем просто, если заметить, что в полярных координатах она задается&nbsp;
уравнением вида&nbsp;
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/74.gif">&nbsp;
и потому вся лежит внутри окружности радиуса&nbsp;
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/75.gif">
<br>
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/76.gif">
<br>
<br>
Заметьте, что хотя для х интервал изменения был взят с большим запасом, график увеличен за счет того, что функция 
<span class="Text_b">ImplicitPlot</span> сообразила, что отображать весь заданный интервал нет необходимости.
<br>
<br>
<span class="Text_b">Пример 9.16.</span> Кривая у<sup>5</sup> + x<sup>4</sup> = ху<sup>2</sup>. Эта кривая с помощью функции 
<span class="Text_b">ImplicitPlot</span>
рисуется совсем просто, если заметить, что все интересные детали лежат в интервале (-10, 10).
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/77.gif">
<br>
По поводу этого и других графиков неявно заданных функций нужно сделать
следующее замечание. Система Mathematica вычерчивает графики очень
аккуратно и весьма точно. Однако в случае неявно заданных функций
свойства вычерчиваемых кривых далеко не всегда очевидны из уравнения.
Аккуратное вычерчивание иногда
также может скрывать эти свойства. Например, иногда очень трудно
отличить криволинейную дугу от отрезка прямой, а из-за этого можно
пропустить точку перегиба. В ГУ квадранте вычерченного системой
Mathematica графика, например, есть точка перегиба. Однако на глаз
заметить ее очень трудно, поскольку криволинейная дуга почти сливается
с прямой. В учебных пособиях в таких случаях обычно жертвуют точностью
и приводят эскиз графика, на котором характерные точки кривой легко
заметны на глаз. Система Mathematica же точностью жертвовать не может,
и потому иногда требуется дополнительное исследование графика, которое
можно провести, конечно же, с помощью системы Mathematica.
<br>
<br>
В  первом  квадранте,   например,
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/78.gif">&nbsp;
а&nbsp;
максимум функция у(х) достигает при
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/79.gif">
<br>
<br>
<span class="Text_b">Пример 9.17</span>. Кривая x<sup>5</sup> + у<sup>5</sup> = ху<sup>2</sup>. Эта кривая с помощью функции
<span class="Text_b">ImplicitPlot</span> рисуется совсем просто, если заметить, что все интересные детали лежат в интервале (-1, 1).
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/80.gif">
<br>График опять вычерчен очень аккуратно и весьма точно. И опять очень
трудно отличить криволинейную дугу от отрезка прямой, и из-за этого
абсциссы&nbsp;
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/81.gif">&nbsp;
точек перегиба в II и IV квадрантах определить на глаз почти невозможно.  Исследованием также находятся абсциссы&nbsp;
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/82.gif">&nbsp;
точек локальных экстремумов в I и III квадрантах,      а      также      уравнения      вертикальных      касательных&nbsp;
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/83.gif">
(х=±0,714261716914966914109...). Наличие асимптоты х+у = 0 определяется по уравнению 
x+ y = ху<sup>2</sup> с первого взгляда.
<br>
<br>Трудные случаи построения графика неявно заданной функции одной
переменной в заданном интервале изменения переменной с помощью функции <span class="Text_b">ImplicitPlot</span>. Построение графика неявно
заданной функции одной переменной даже в заданном интервале изменения
переменной — весьма непростая задача. Функция <span class="Text_b">ImplicitPlot</span> во многих случаях справляется с ней блестяще. Но далеко не во всех случаях. Вот тривиальный пример.
<br>
</p><pre>ImplicitPlot[Min[x,у]==1,(х,-22,22},PlotPoints-&gt;200];
</pre><pre> Solve::dinv :
</pre><pre>The expression Min'0'1* [x, y] involves unknowns in more than one argument,
</pre><pre> so inverse functions cannot be used.  More...
</pre><pre>ImplicitPlot::epfail: Equation Min[x,y]==l  
</pre><pre>could not be  solved  for points  to plot.
</pre>
<br>
Конечно, уравнение <span class="Text_b">Min[x,y]= =1</span>
определяет неявно заданную функцию, график которой представляет собой
прямой угол с вершиной в точке (1; 1), причем стороны его параллельны
осям координат. Потому с этим примером должен без труда справляться
даже шестиклассник. Впрочем, функция <span class="Text_b">ImplicitPlot</span> с этим графиком тоже может справиться, но после некоторой подсказки.
<br>
<br>
Вот еще один трудный (для функции <span class="Text_b">ImplicitPlot</span>) случай.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/84.gif">
<br>
С этим примером должен без труда справляться даже восьмиклассник.
(Правда, если он хочет участвовать в районной (городской) олимпиаде или
поступить на мехмат.) И вот еще один совсем "позорный" пример.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/85.gif">
<br>
А вот этот простенький пример считается неоправданно долго.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/86.gif">
<br>
Это поистине удивительно, потому что графики для всех сомножителей строятся очень быстро!
<br>
<br>
Предостережение. Заглянув в справочную систему, вы можете попытаться построить этот график так
<br>
<pre>ImplicitPlot[x^2+y^2-25==0,16 х^2+у^2-4==0,
</pre><pre>х^2+16у^2-96у+140==0,
</pre><pre>4x^2-16x*Sign[х]+4у^2-16у+31==0,
</pre><pre>{х,-20,20},
</pre><pre>PlotPoints-&gt;25];
</pre>
<br>
или так
<br>
<pre>ImplicitPlot[x^2+y^2-25==0,16  
</pre><pre>х^2+у^2-4==0,
</pre><pre>х^2+16у^2-96у+140==0, 
</pre><pre>4х^2-16х*Sign[х]+4у^2-16у+31==0,
</pre><pre>{х,-20,20},{у,-20,20),
</pre><pre>&nbsp;PlotPoints-&gt;25];
</pre>
<br>
Вы увидите, что ничего не произойдет! На самом деле вызов нужно записать вот так
<br>
<pre>ImplicitPlot[{x^2+y^2-25==0,16 
</pre><pre>х^2+у^2-4= =0,
</pre><pre>х^2+16у^2-96у+140==0, 
</pre><pre>4х^2-16х*Sign[х]+4у^2-16у+31==0},
</pre><pre>{х,-20,20},
</pre><pre>PlotPoints-&gt;25];
</pre>
<br>
или так
<br>
<pre>ImplicitPlot[{x^2+y^2-25==0,16
</pre><pre>&nbsp;x^2+у^2-4==0,
</pre><pre>х^2+16у^2-96у+140==0, 
</pre><pre>4хл2-16х*Sign[х]+4у^2-16у+31==0},
</pre><pre>{х,-20,20},{у,-20,20), 
</pre><pre>PlotPoints-&gt;25];
</pre>
<br>
Фактически это построение графиков нескольких неявных функций. Мы этот случай рассмотрим чуть позднее.
<br>
<br>Построение графика неявно заданной функции одной переменной при
изменении переменной на заданном интервале, из которого исключено
несколько точек.
<br>
<br>
Чтобы построить график решения уравнения, найденного функцией <span class="Text_b">Solve</span> на интервале изменения переменной (xmin, xmax) , из которого исключено несколько точек, нужно в вызове функции 
<span class="Text_b">ImplicitPlot</span> [уравнение, (переменная, xmin, xmax}] между
xmin, и хmах через запятую перечислить все исключаемые точки. Впрочем, функция 
<span class="Text_b">ImplicitPlot</span>, как правило, сама избегает
значений, которые доставляют хлопоты, и потому прибегать к этой форме
вызова не приходится даже в следующих двух классических случаях.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/87.gif"><br>&nbsp;<br>
<br>&nbsp;<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/88.gif"> <br>
<br>Построение графика неявно заданной функции одной переменной при
изменении переменных на заданных интервалах методом нахождения линии
уровня
<br>
<br>
Уравнение<span class="Text_b"> F, (х, у) = F2 (х, у)</span> можно записать в виде <span class="Text_b">F, (х, у) - F, (х, у) = 0</span>. Так что фактически вместо решения уравнения
<span class="Text_b">F, (х, у) = F2 (х, у) </span>можно найти линию уровня функции F, (х, у) - F2 (х, у), на которой она равна 0. Как дать такую подсказку функции 
<span class="Text_b">ImplicitPlot?</span> Очень просто: нужно указать интервалы изменения обеих переменных. Рассмотрим примеры, когда это полезно.
<br>
<br>
Ранее с помощью вызова <span class="Text_b">ImplicitPlot[Min[x,у] ==1, {x,-22,22},PlotPoints-&gt; 200];</span> мы не смогли построить график неявной функции
<span class="Text_b">Min[x,y]==l.</span> А вот с подсказкой <span class="Text_b">ImplicitPlot[Min[x,y]==l,{х,-22,22},(у,-22,22},PlotPoints-&gt;200];</span> график строится мгновенно. Вызов<br>
<br>
<pre>ImplicitPlot[ (х^2+у^2-25) (16 х^2+у^2-4)*
</pre><pre>*(х^2+16у^2-96у+140)
</pre><pre>&nbsp;(4х^2-16х*Sign[х]+4у^2-16у+31)==0, 
</pre><pre>{х,-5,5}, (у,-5,5), 
</pre><pre>PlotPoints-&gt;25];<br>
</pre>
строит график более десяти минут, а вызов<br>
<pre>&nbsp;ImplicitPlot [(х^2+у-2-25) (16 х^2+у^2-4)
</pre><pre>&nbsp;(х^2+16у^2-96у+140)
</pre><pre>&nbsp;(4x^2-16x*Sign[х]+4у^2 -1бу+31)==0,
</pre><pre>{х,-5,5}, {у,-5,5),
</pre><pre>&nbsp;plotPoints-&gt;250];
</pre>
<br>
нужно менее трети секунды.
<br>
<br>
Вот еще один график, который без подсказки не строится вообще.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/89.gif">
<br>
График
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/90.gif">
<br>строится за 0,344 секунды. Важна ли тут подсказка (у,-1,2}?
Оказывается, график можно построить и без нее, но это займет немалое
время даже при <span class="Text_b">PlotPoints-&gt;25. </span>
<br>
<br>
<span class="Text_b">Построение графиков нескольких неявных функций </span>
<br>
<br>
Построение таких графиков теоретически сводится к построению графика
одной неявной функции. Пусть нужно построить графики неявных функций,
заданных уравнениями
<br>
<br>
<span class="Text_b">F<sub>1</sub>(х, у) = Ф<sub>1</sub>(х, у), F<sub>2</sub> (х, у) = Ф<sub>2</sub>(х, у), F<sub>3</sub> (х, у) = Ф<sub>3</sub>(х, у), ..., F<sub>n
</sub>(x, у) = Ф<sub>n</sub>(х, у). </span>
<br>
<br>
Тогда мы можем привести эти уравнения к виду <span class="Text_b">F<sub>1</sub>(х, у) - Ф<sub>1</sub>(х, у) = 
0, F<sub>2</sub> (х, у) - Ф<sub>2</sub>(х, у) = 0,  F<sub>3</sub> (х, у) - Ф<sub>3</sub>(х, у) = 0, ...,  F<sub>n</sub> (х, у) - Ф<sub>n</sub>(х, у) = 
0</span> и построить график <span class="Text_b">(F<sub>1 </sub>(х, у) - Ф<sub>1</sub>(х, у))( F<sub>2</sub>(х, у) - Ф<sub>2</sub>(х, у))( F<sub>3</sub> (х, у) - Ф<sub>3</sub>(х, у))...( 
F<sub>n</sub> (х, у) - Ф<sub>n</sub>(х, у)) = 0. </span>
<br>
<br>
Но на практике лучше поступать не так, а совсем наоборот. Например, построение графика
<br>
<pre>ImplicitPlotf
</pre><pre>((42-38Sign[x])y+x^(х-2) ^2/100) ^ (1/3) -1)
</pre><pre>&nbsp;(Sqrt [13-4х]+1) )
</pre><pre> (9Sqrt[5]-x(x-l)Sqrt[x+2])(4х^2+16у^2+56х-64у+259)==0,
</pre><pre>{х,-2,13/4),</pre>
<pre>PlotPoints-&gt;25];//Timing
</pre>
<br>
можно заменить построением следующего графика.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/91.gif">
<br>
График
<br>
<pre>ImplicitPlot[((4у+х<span lang="en-us">^</span>2)<span lang="en-us">^</span>2+Sign[х<span lang="en-us">^</span>2+2х]+1)
</pre><pre>((х<span lang="en-us">^</span>2+у<span lang="en-us">^</span>2)<span lang="en-us">^</span>(5/2)-4х(х<span lang="en-us">^</span>2-у<span lang="en-us">^</span>2))==0, {х,-5,5},</pre>
<pre>PlotPoints-&gt;25];//Timing
</pre>
<br>
можно строить часами, а график
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/92.gif">
<br>
строится всего за 21,641 секунды. Этот график можно попытаться построить и как линию уровня.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/93.gif">
<br>Этот способ потребует всего лишь 17,859 секунды. Но обратите
внимание на отсутствие ножки у трилистника. Вместо нее на экране всего
лишь несколько почти незаметных точек. Попытка же увеличения значений
параметров PlotPoints и PlotDivision может привести к неоправданно
большому запросу виртуальной памяти и к пробуксовыванию. Мораль: при
построении контурных линий некоторые ветви могут пропадать.
<br>
<br>
Вот что происходит при построении некоторых графиков.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/94.gif">
<br>
График
<br>
<pre>ImplicitPlot[
Sqrt[(х^2+у^2)^5]- 2*(Abs[у]+у)*(х^2+у^2)==0,
</pre><pre>(х,-10,10},{у,-10,10},</pre>
<pre>PlotPoints-&gt;300];//Timing
</pre>
<br>
вообще выглядит пустым. График же
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/98.gif">
<br>
рисуется,    но    не    без    проблем:    некоторые    параметры<span class="Text_b">    (PlotPoints-&gt;500, PlotDivision-&gt;200)</span> пришлось подбирать, иначе мелкие штрихи пропадают. Еще большие проблемы возникают при вычерчивании следующего графика.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/99.gif">
<br>
График же
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/100.gif">
<br>
вычерчивается без проблем.
<br>
<br>
Так же легко вычерчивается и следующий график.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/101.gif">
<br>
График же
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/102.gif">
<br>
построению почти не поддается: при изменении параметров<span class="Text_b"> PlotPoints-&gt;l000, PlotDivision-&gt;2500</span> в нем часто исчезают те или иные детали. Не удается его построить ни вот так
<br>
<pre>ImplicitPlott((х+4)^2+1-Sigm[1-у^2])</pre>
<pre>((х+3)^2+у^2+2Sign[х+3]+1) 
<br>
<br>
((2х+3)^2+у^2-1)((х^2-х)^2-Sign[1-у^2]+1) </pre><pre>(у^2+Sign[х^2-х]+1) ((х-3)^2+у^2+2Sign[х-3]+1)
</pre><pre>((х-2)^2+(у-1)^2+Sign[2-х]+Sign[y-1]+1)
</pre><pre>&nbsp;((х^2-9х+20)^2-Sign[1-у^2]+1)
</pre><pre>((y+Abs[x-4]+Abs[x-5])^2-Sign[(х-4)(21/4-х)]+1)==0, 
</pre><pre>(х,-4,5},
</pre><pre>PlotPoints-&gt;1000,PlotDivision-&gt;250];
</pre>
<br>
ни вот так
<pre>ImplicitPlott{(х+4)^2+1-Sign[1-у^2]==0,
</pre><pre>&nbsp;(х+3)^2+y^2+2Sign[х+3]+1==0,
</pre><pre>&nbsp;(2х+3)^2+у^2-1==0, (х^2-х)^2-Sign[1-у^2]+1==0,
</pre><pre>y^2+Sign[x^2-x]+l==0, (х-3)^2+y^2+2Sign[x-3]+l==0, 
</pre><pre>(x-2)^2+(y-l)^2+Sign[2-x]+Sign[y-l]+l==0, 
</pre><pre>(х^2-9х+20)^2-Sign[l-y^2]+l==0,
</pre><pre>(y+Abs[x-4]+Abs[x-5])^2-Sign[(x-4)(21/4-х)]+1==0}, 
</pre><pre>{х,-4,5},PlotPoints-&gt;1000,
</pre><pre>PlotDivision-&gt;250];
</pre>
<br>
В лучшем случае получаем кучу предупреждений и вот что.
<br>
<img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/103.gif">
<br>
Мораль: графики многих неявных функций легко строятся с помощью функции <span class="Text_b">ImplicitPlot</span>,
однако существуют невинно выглядящие мехматовские "приколы", при
построении которых либо теряются дуги, отдельные точки, отрезки, либо
же графики не строятся совсем. Иногда проблем удается избежать, если
изменить метод построения графика (от решения уравнения перейти к
построению линии уровня или наоборот). Однако это помогает далеко не
всегда. Тогда приходится брать мехматовские учебники. Они не покажутся
такими недоступными, если вы будете читать их, а система Mathematica
будет делать то, что там написано! Очень часто всего лишь нескольких
подстановок (их может выполнить система Mathematica) достаточно, чтобы
перейти к параметрическому заданию графика.<p></p>
    </td>
  </tr>
</tbody></table>
<table width="11%" border="0" cols="3">
  <tbody><tr> 
    <td width="10%">&nbsp;</td>
  </tr>
</tbody></table>

<table width="16%" border="0" cols="3">
  <tbody><tr>
    <td><a href="http://teachprog.narod.ru/program/predmet/Mathematica/book/Mathematica5/Glava_09/Index06.htm"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/Back.gif" border="0"></a></td>
    <td width="10%"><a href="http://teachprog.narod.ru/program/predmet/Mathematica/book/Mathematica5/Glava_09/Index0.htm"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/Menu.gif" border="0"></a></td>
    <td align="right"><a href="http://teachprog.narod.ru/program/predmet/Mathematica/book/Mathematica5/Glava_09/Index08.htm"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/For.gif" border="0"></a></td>
  </tr>
</tbody></table>
<!-- ><!-- "><!-- '><!-- -->


<style>
#bn {display:block;}
#bt {display:block;}
</style>
<div style="background: transparent url(http://www.tns-counter.ru/V13a****yandex_ru/ru/CP1251/tmsec=narod_total/) repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;"></div>
<script language="JavaScript" src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/163.htm"></script><div style="position: absolute; left: 0pt; visibility: hidden;" id="ch"><spacer type="block" width="1" height="1"></div><div style="position: absolute; left: 1149px; top: 0pt; visibility: hidden; z-index: 999;" id="bn"><table width="108" border="0" cellpadding="1" cellspacing="0"><tbody><tr><td bgcolor="#000000"><table width="100%" border="0" cellpadding="0" cellspacing="0"><tbody><tr bgcolor="#ffffff"><td height="1" nowrap="nowrap"><spacer type="block" width="1" height="1"></td></tr><tr><td><table width="100%" border="0" cellpadding="0" cellspacing="0"><tbody><tr bgcolor="#cccccc"><td width="1" bgcolor="#ffffff" nowrap="nowrap"><spacer type="block" width="1" height="1"></td><td width="18"><a href="http://www.yandex.ru/" target="_blank"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/by.gif" title="Яндекс" alt="Яндекс" vspace="2" width="18" border="0" height="14" hspace="1"></a></td><td width="98%"><a href="http://www.yandex.ru/advertising/index.html" target="_blank"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bt.gif" title="Реклама на Яндексе" alt="Реклама на Яндексе" width="51" align="middle" border="0" height="14"></a></td><td width="11"><a href="http://narod.yandex.ru/help/20" target="_blank"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bh.gif" title="Помощь" alt="Помощь" width="11" border="0" height="10"></a></td><td width="11"><a href="#" onclick="rbu11A526B6(); return false;"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bu.gif" title="Спрятать" alt="Спрятать" width="11" border="0" height="10"></a></td><td width="1" bgcolor="#808080" nowrap="nowrap"><spacer type="block" width="1" height="1"></td></tr></tbody></table></td></tr><tr><td><table width="100%" border="0" cellpadding="0" cellspacing="0"><tbody><tr bgcolor="#cccccc"><td width="3"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td><td width="100%" bgcolor="#808080"><spacer type="block" width="1" height="1"></td><td width="3"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td></tr><tr bgcolor="#cccccc"><td width="3" background="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td><td width="100%"><a href="http://yabs.yandex.ru/count/4QKcjXAjONW40000ZhzsYwi4QnI8hjae1fAlzSW7YgI3vmIGeBK0If6yq4ba1fCkYwEfMnv2UWK0" target="_blank" title="Яндекс.Деньги"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/4QKcjX1E26C40000ZhzsYwi4QnI8hjae1fAlzSW7YgI3vmIGeBK0If6yq4ba.gif" alt="Яндекс.Деньги" width="100" border="0" height="100"></a></td><td width="3" background="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td></tr><tr><td width="3" background="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td><td bgcolor="#ffffff" height="1"><spacer type="block" width="1" height="1"></td><td width="3" background="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td></tr></tbody></table></td></tr><tr bgcolor="#cccccc"><td height="1" nowrap="nowrap"><table width="1" align="left" border="0" cellpadding="0" cellspacing="0"><tbody><tr><td bgcolor="#ffffff" height="1" nowrap="nowrap"><spacer type="block" width="1" height="1"></td></tr></tbody></table><table width="1" align="right" border="0" cellpadding="0" cellspacing="0"><tbody><tr><td bgcolor="#808080" height="1" nowrap="nowrap"><spacer type="block" width="1" height="1"></td></tr></tbody></table></td></tr><tr bgcolor="#808080"><td height="1" nowrap="nowrap"><spacer type="block" width="1" height="1"></td></tr></tbody></table></td></tr></tbody></table></div>
<div style="position: absolute; left: 1149px; top: 0pt; visibility: visible; z-index: 999;" id="bt"><table width="108" border="0" cellpadding="1" cellspacing="0"><tbody><tr><td bgcolor="#000000"><table width="100%" border="0" cellpadding="0" cellspacing="0"><tbody><tr bgcolor="#ffffff"><td height="1" nowrap="nowrap"><spacer type="block" width="1" height="1"></td></tr><tr><td><table width="100%" border="0" cellpadding="0" cellspacing="0"><tbody><tr bgcolor="#cccccc"><td width="1" bgcolor="#ffffff" nowrap="nowrap"><spacer type="block" width="1" height="1"></td><td width="18"><a href="http://www.yandex.ru/" target="_blank"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/by.gif" title="Яндекс" alt="Яндекс" vspace="2" width="18" border="0" height="14" hspace="1"></a></td><td width="98%"><a href="http://www.yandex.ru/advertising/index.html" target="_blank"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bt.gif" title="Реклама на Яндексе" alt="Реклама на Яндексе" width="51" align="middle" border="0" height="14"></a></td><td width="11"><a href="http://narod.yandex.ru/help/20" target="_blank"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bh.gif" title="Помощь" alt="Помощь" width="11" border="0" height="10"></a></td><td width="11"><a href="#" onclick="rbd11A526B6(); return false;"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bd.gif" title="Показать" alt="Показать" width="11" border="0" height="10"></a></td><td width="11"><a href="#" onclick="clb11A526B6();return false;"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bc.gif" title="Закрыть" alt="Закрыть" width="11" border="0" height="10"></a></td><td width="1" bgcolor="#808080" nowrap="nowrap"><spacer type="block" width="1" height="1"></td></tr></tbody></table></td></tr><tr><td><table width="100%" border="0" cellpadding="0" cellspacing="0"><tbody><tr bgcolor="#cccccc"><td width="3"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td><td width="100%" bgcolor="#808080"><spacer type="block" width="1" height="1"></td><td width="3"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td></tr><tr bgcolor="#cccccc"><td width="3" background="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td><td width="100%"><a href="http://yabs.yandex.ru/count/4QKcjXAjONW40000ZhzsYwi4QnI8hjae1fAlzSW7YgI3vmIGeBK0If6yq4ba1fCkYwEfMnv2UWK0" target="_blank"><font size="-2" color="#000000">Яндекс.Деньги</font></a></td><td width="3" background="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td></tr><tr><td width="3" background="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td><td bgcolor="#ffffff" height="1"><spacer type="block" width="1" height="1"></td><td width="3" background="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif"><img src="%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2_files/bb.gif" width="3" height="1"></td></tr></tbody></table></td></tr><tr bgcolor="#cccccc"><td height="1" nowrap="nowrap"><table width="1" align="left" border="0" cellpadding="0" cellspacing="0"><tbody><tr><td bgcolor="#ffffff" height="1" nowrap="nowrap"><spacer type="block" width="1" height="1"></td></tr></tbody></table><table width="1" align="right" border="0" cellpadding="0" cellspacing="0"><tbody><tr><td bgcolor="#808080" height="1" nowrap="nowrap"><spacer type="block" width="1" height="1"></td></tr></tbody></table></td></tr><tr bgcolor="#808080"><td height="1" nowrap="nowrap"><spacer type="block" width="1" height="1"></td></tr></tbody></table></td></tr></tbody></table></div>

<!-- mailto:spm111@yandex.ru -->
</body></html>