// lab3_EVM.cpp: определяет точку входа для консольного приложения.
//
/*
Вариант 12
В одномерном массиве, состоящем из n вещественных элементов, вычислить:
1.)	номер максимального по модулю элемента массива;
2.)	сумму элементов массива, расположенных после первого положительного элемента.
Преобразовать массив таким образом, чтобы сначала располагались все элементы массива, 
целая часть которых лежит в интервале [a,b], а потом – все остальные.
*/

#include <stdafx.h>
#include <stdio.h>
#include <locale.h>
#include <conio.h>
#include <math.h>
#include <string.h>


int main()
{
	setlocale(LC_ALL, "Russian");
	int i, ind, ind2;
	const int n = 5;
	double massiv[n], max, S = 0, a, b, min;
	char c ;
	
	puts("Здравствуйте! Вас приветствует программа вычисления:\n1)номера максимального по модулю элемента массива;");
	puts("2)суммы элементов массива, расположенных после первого положительного элемента;");
	puts("а так же направленная на преобразование массива таким образом, чтобы cначала \nрасполагались все элементы массива, целая часть которых лежит в интервале [a,b],а потом – все остальные.");
	puts(" \n");
	printf("Вы хотите ввести массив длиной %d (y/Y - да, иначе - нет)?\n \n", n);
	c = getch();
	if ((c == -115) || (c == -83)) 
	{
			for (i = 0; i < n; i++)
		{
			printf("n%d = ", i+1);
			scanf("%lf", &massiv[i]);
		}
	}		
	else 
	{ 
		puts(" \nИзмените n на нужное и начните сначала");
		getch();
		return 0;
	}
	max = fabs(massiv[0]);
	for (i = 0; i < n; i++)
	{
		if (fabs(massiv[i]) > max) 
		{
			max = massiv[i];
			ind = i;
		}
	}
	printf("1)Самый большой по модулю элемент находится под номером %d\n \n",ind + 1);
	for (i = 0; i < n; i++)
	{
		if (massiv[i] > 0)
		{
			ind2 = i;
			break;
		}
	}
	for (i = ind2 + 1; i < n; i++)
		S +=massiv[i];
	printf("2)Сумма элементов массива, расположенных после первого положительного элемента составляет %0.5lf\n \n",S);
	printf("Введите числа a и b\n");
	scanf("%lf%lf", &a, &b);
	if (a > b) 
	{
		max = a;
		min = b;
	}
	else 
	{
		min = a;
		max = b;
	}
	
	ind2 = 0;
	for (i = 0; i < n; i++)
	{
		if (((int)massiv[i] < max) && ((int)massiv[i] > min)) 
		{
			a = massiv[ind2];
			massiv[ind2] = massiv[i];
			massiv[i] = a;
			ind2++;
		}
	}
	printf("Порядок элементов после изменения стал таким:\n \n");
	for (i = 0; i < n; i++)
	{
		
		printf("n%d = %0.5lf", i, massiv[i]);
	}
	
	getch();
	return 0;
}

