<html>
<title>Методические указания</title>
<head><H2 ALIGN=CENTER>Методические указания к работе №5</H2></head>

<body BGCOLOR="#FF0FFF" TEXT="#000000" LINK="#FF0000" ALINK="A52A2A">
<P>Видеосистема компьютера включает в себя ряд аппаратных и программных средств, 
позволяющих получать на экране текстовые и графические изображения.
<P>К аппаратным средствам можно отнести монитор - высококачественную монохромную или цветную 
электронно-лучевую трубку со схемами питания и управления, или видеоадаптер - электронную плату,
 обеспечивающую вывод на экран текстовых и графических изображений, 
а также программное управление видеосистемой. Качество и возможности изображения определяются 
характеристиками видеоадаптера.
<P>Существует несколько стандартных режимов работы видеоадаптеров, определённых фирмой IBM.
Любой из этих режимов можно инициировать конструкцией типа:

mov ah,00h
mov al, mode
int 10h
<TABLE BORDER=1>
<CAPTION>Таблица 1-Режимы работы видеоадаптеров
</CAPTION>
<TR><TD>Режимы</TD><TD>	Разрешение</TD><TD>Тип информации</TD></TR>
<TR><TD>0 и 1</TD><TD>40 x 25 (8 x 8)</TD><TD>Текстовый цветной</TD></TR>
<TR><TD>2 и 3</TD><TD>80 x 25 (8 x8)</TD><TD>	Текстовый цветной</TD></TR>
<TR><TD>4 и 5</TD><TD>320 x 200</TD><TD>Графический цветной</TD></TR>
<TR><TD>6</TD><TD>640 x 200</TD><TD>Графический цветной</TD></TR>
<TR><TD>7</TD><TD>80 x 25 (9 x14)</TD><TD>Текстовый монохромный</TD></TR>
<TR><TD>0Dh</TD><TD>320 x 200</TD><TD>Графический цветной</TD></TR>
<TR><TD>0Eh</TD><TD>640 x 200</TD><TD>Графический цветной</TD></TR>
<TR><TD>0Fh</TD><TD>640 x 350</TD><TD>Графический монохромный</TD></TR>
<TR><TD>10h</TD><TD>640 x 350</TD><TD>Графический цветной</TD></TR>
<TR><TD>11h</TD><TD>640 x 480</TD><TD>Графический цветной</TD></TR>
<TR><TD>12h</TD><TD>640 x 480</TD><TD>Графический цветной</TD></TR>
<TR><TD>13h</TD><TD>320 x 200</TD><TD>Графический цветной</TD></TR>
</TABLE > 
<P>В текстовом режиме изображение обычно состоит из 25 строк по 80 символов в строке. Поскольку таблицы, описывающие форму
 символов, загружаются в память программно, имеется возможность работать с символами любой конфигурации. Обычно используется
 стандартная кодовая таблица символов, содержащая знаки английского и русского алфавитов, цифры, специальные символы, символы псевдографики и др.
<P>В памяти адаптера одновременно может храниться до 8 текстовых страниц. Переключение страниц осуществляется программно.
<P>Программные средства обслуживания экрана включают в себя видеодрайвер BIOS, к которому можно обратиться из прикладной программы с помощью 
прерывания Int 10h, и который обеспечивает нижний уровень управления, а также программы  DOS, 
активизируемые с помощью прерывания   Int 21h и предоставляюще более высокий уровень сервиса в текстовом режиме. 
Работа в графическом режиме не обслуживается DOS и может осуществляться только с помощью функций видеодрайвера. 

<P><B>Вывод текстовой информации.</B></P>
DOS предоставляет следующие возможности вывода на экран текстовой информации:
<LI> обращение к экрану как к файлу, с помощью прерывания DOS Int 21h с функцией 40h;
 <LI>использование группы функций из диапазона 1…Ch, реализующих посимвольный вывод, а также ввод строк.
<P>Средства DOS  в чистом виде позволяют выводить на экран только чёрно-белый текст; возможности позиционирования текста на экране ограничиваются использованием символов возврата каретки и перевода строки.
 Для вывода на экран средствами DOS  цветных изображений следует использовать управляющие Esc-последовательности, реализуемые драйвером ANSI.SYS.
<P>Текстовые страницы адаптера EGA  располагаются в адресном пространстве компьютера по следующим адресам:

<P>страница 0 - B8000h…B8F40h,
<P>страница 1 - B9000h…B9F40h,
<P>страница 2 - BA000h…BAF40h,
<P>страница 3 - BB000h…BBF40h,
<P>страница 4 - BC000h…BCF40h,
<P>страница 5 - BD000h…BDF40h,
<P>страница 6 - BE000h…BEF40h,
<P>страница 7 - BF000h…BFF40h.

<P>Каждый символ занимает в буфере поле из двух байтов. Младшие байты всех полей отводятся под коды ASCII  отображаемых символов, старшие байты - под их атрибуты. Коды символов записываются в видеобуфер в том порядке, в котором они должны появляться на экране: первые 80 полей соответствуют первой строке экрана, вторые 80 - второй и т.д. Таким образом, переход на следующую строку определяется не  управляющими кодами возврата каретки и перевода строки, а размещением кодов символов в другом месте буфера, в полях, соответствующих следующей строке. Вообще, при формировании изображений непосредственно в видеобуфер, в обход программ DOS и BIOS, все управляющие коды ASCII  теряют свои управляющие функции и отображаются в виде соответствующих им символов.
<IMG SRC="Pic/4.bmp" ALT="Картинка">
<P ALIGN=CENTER>Рисунок 1 - Логическая организация текстового буфера</P>

<P>Атрибут символа определяет цвет символа и фона под ним, а также некоторые дополнительные характеристики изображения на экране. Структура байта атрибутов приведена на рисунке 2.
<IMG SRC="Pic/5.bmp" ALT="Картинка">
<P ALIGN=CENTER>Рисунок 2 - Структура байта атрибутов</P>

<P>Средства вывода на экран реализуются и драйвером BIOS. Большинство функций BIOS позволяют формировать изображение на любой видеостранице, как активной, так и скрытой. Это даёт возможность либо подготовить заранее несколько страниц и по мере необходимости быстро их переключать, либо, пока одна страница выводиться на экран, готовить изображение на следующей. При работе 
в текстовом режиме используют следующие функции:

<LI> 02h - установить позицию курсора;
<LI> 03h - получить позицию курсора;
<LI>05h - установить видеостраницу;
<LI> 06h - инициализировать или прокрутить вверх окно;
<LI>07h - инициализировать или прокрутить вниз окно;
<LI>08h - прочитать символ и атрибут в позиции курсора;
<LI>09h - вывести символ и атрибут в позицию курсора;
<LI>0Ah - вывести символ в позицию курсора;
<LI>0Eh - вывести символ в режиме телетайпа;
<LI>10h, подфункция 03h - переключить бит мерцание/яркость; 
<LI>13h - вывести строку в режиме телетайпа.

<P><B>Графические возможности драйвера BIOS.</B></P>
<P>Графический адаптер EGA обеспечивает хранение и отображение двух графических страниц с разрешением 640 х 350 цветных точек. Адаптер поддерживает 64 цвета, хотя в каждый момент времени изображение на экране может содержать только 16 цветов. Этот набор цветов задаётся программно и может легко изменяться.
<P>Помимо произвольных изображений в графическом режиме можно отображать и текстовую информацию, используя любые функции DOS или BIOS. Цвета пикселов и фона задаются содержимым цветовых регистров, определяющих цветовую палитру видеосистемы. В адаптере EGA имеется 17 цветовых регистров, каждый из которых может содержать коды 64 цветов. Изменение содержимого цветовых регистров позволяет практически мгновенно менять цвета изображения на экране.
<P>В то время как переключение цветов осуществляется почти мгновенно, вывод пикселов средствами BIOS требует весьма значительного времени.
<P><B>Функции VGA BIOS. </B>
Для вызова функций используется прерывание int 10h.
<P><B>Функция 00h. Установить видеорежим.</B>
Устанавливает заданный видеорежим.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AH - значение 00h;
<LI> в AL - код видеорежима .
Функцию установки текстового режима обычно обычно нужно вызывать при входе  программу, работающую в этом режиме.
<P><B>Функция 01h. Установить размер курсора.</B>
Предназначена для задания размера курсора в текстовом режиме. 
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AH - значение 01h;
<LI> в CH - номер начальной строки курсора в знакоместе;
<LI> в CL - номер конечной строки курсора в знакоместе.
Номера начальной и конечной строк курсора задаются относительно верхней границй знакоместа. Для задания номеров начальной и конечной строк в регистрах CL и CH  используются только разряды 0-4, в разряды 5-7 требуется записать нули.
<P><B>Функция 02h. Установить позицию курсора.</B>
Позиционирует курсор на экране.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AH - значение 02h;
<LI> в BH - номер текстовой видеостраницы;
<LI> в DH - номер строки  (Y);
<LI> в DL - номер столбца (X).
<P><B>Функция 03h. Получить позицию и размер курсора.</B>
Определяет текущую позицию курсора на заданной видеостранице, а также размер курсора.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AH - значение 03h;
<LI> в BH - номер видеостраницы;
После выполнения функции в регистры будет помещена следующая информация:
<LI> в CH - номер начальной строки курсора в знакоместе;
<LI> в CL - номер конечной строки курсора в знакоместе;
<LI> в DH - номер строки текущей позиции курсора;
<LI> в DL - номер столбца текущей позиции курсора.
<P><B>Функция 05h. Установить видеостраницу.</B>
В текстовом режиме данная функция позволяет выбрать в качестве текущей одну из нескольких доступных видеостраниц.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AH - значение 05h;
<LI> в AL - номер видеостраницы .
<P><B>Функция 10h, подфункция 00h.  Установить один регистр палитры.</B>
Предназначена для 16-цветных режимов. Позволяет переопределить цвет, соответствующий одному из кодов цвета.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AX - значение 1000h;
<LI> в BL - номер регистра палитры;
<LI> в BH -цвет;
<P><B>Функция 10h, подфункция 01h.  Установить цвет рамки экрана.</B>
Позволяет изменить цвет рамки экрана.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AX - значение 1001h;
<LI> в BH -цвет;
<P><B>Функция 10h, подфункция 02h.  Установить все регистры палитры.</B>
Предназначена для 16-цветных режимов. Позволяет переопределить значения 16 регистров палитры и регистра рамки экрана.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AX - значение 1002h;
<LI> в ES:DX - указатель на массив из 17 байтов (байты 0-15 содержат цвета палитры, байт 16- цвет рамки).
<P><B>Функция 10h, подфункция 03h. Переключить бит атрибута мерцание/яркость.</B>
Переключает значение бита 7 байта атрибутов символа: мерцание или яркий фон.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AX - значение 1003h;
<LI> в BL - значение бита 7 в байте атрибутов (0 - яркий фон, 1- мерцание символа).
<P><B>Функция 10h, подфункция 07h.  Прочитать один регистр палитры.</B>
Предназначена для 16-цветных режимов. Позволяет прочитать значение цвета из заданного регистра палитры.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AX - значение 1007h;
<LI> в BL - номер регистра палитры (0-15).
После выполнения функция возвращает значение цвета в регистре BH.
<P><B>Функция 10h, подфункция 08h.  Прочитать один регистр палитры.</B>
Позволяет прочитать значение цвета рамки экрана из соответствующего регистра.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AX - значение 1008h;
После выполнения функция возвращает значение цвета в регистре BH.
<P><B>Функция 10h, подфункция 09h.  Прочитать все  регистры палитры.</B>
Предназначена для 16-цветных режимов. Позволяет прочитать и сохранить в оперативной памяти значения 16 регистров палитры и регистра рамки экрана.
Перед вызовом прерывания требуется занести в регистры следующие значения:
<LI> в AX - значение 1009h;
<LI> в ES:DX - указатель на массив из 17 байтов для сохранения кодов цвета.
После выполнения функция байты 0-15 указанного массива содержат цвета палитры, байт 16- цвет рамки.

<P><B>2 Порядок выполнения работы</B>
<P>1.Ознакомиться с теоретическим материалом, приведённым в методических указаниях.
<P>2.Запустить на выполнение пример и ознакомиться с демонстрационными программами.
<P>3.Получить у преподавателя номер варианта и задание по нему, которое приведено в лабораторном комплексе.
<P>4.Разработать предварительный алгоритм программы.
<P>5.В текстовом редакторе  ввести текст исходной программы.
<P>6.Запустить на выполнение программу TASM.EXE, если есть ошибки, то вернуться к пункту 4.
<P>7.Запустить на выполнение программу TLINK.EXE, если есть ошибки, то вернуться к пункту 4.
<P>8.Запустить на выполнение программу TD.EXE, если есть ошибки, то вернуться к пункту 4.
<P>9. Получить контрольные вопросы.
<P>10.Подготовить ответы на вопрсы.
<P>11.Оформить отчёт.
<P>12.Защитить лабораторную работу.
